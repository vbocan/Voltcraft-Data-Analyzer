"""
Project:      Voltcraft Data Analyzer
Author:       Valer Bocan, PhD <valer@bocan.ro>
Last updated: June 25rd, 2014

Module
description:  The VoltcraftDataFile module processes data files containing history of voltage, current and power factor,
              as generated by the Voltcraft Energy-Logger 4000.
              
License:      This project is placed in the public domain, hoping that it will be useful to people tinkering with Voltcraft products.
              
Reference:    Voltcraft File Format: http://www2.produktinfo.conrad.com/datenblaetter/125000-149999/125323-da-01-en-Datenprotokoll_SD_card_file_Formatv1_2.pdf
"""

from sys import argv
from os import listdir, getcwd
from os.path import isfile, join, getsize
from datetime import timedelta
from datetime import datetime
from DataExport import WriteInfoData, WriteHistoricData
import VoltcraftInformationFile
import VoltcraftDataFile

VoltcraftData = []
ErrorOccured = False

if __name__ == "__main__":    
    print("Voltcraft Data Analyzer v1.0 (June 25th, 2014)")
    print("Valer Bocan, PhD <valer@bocan.ro>")
    TargetFolder = getcwd()
    if len(argv) > 1:
        TargetFolder = argv[1:]
    print("Processing Voltcraft files from folder {0}:".format(TargetFolder))

    # Get all files in the target folder
    TargetFiles = [ f for f in listdir(TargetFolder) if f.upper().endswith("BIN")]
    
    for filename in TargetFiles:
        try:
            print("Processing file {0}.".format(filename))
            # Check file size (if it's 102, we have an information file, else it's a data file)
            isInfoFile = (getsize(filename) == 102);
            if isInfoFile:
                VoltcraftInfo = VoltcraftInformationFile.Process(filename)            
            else:
                data = list(VoltcraftDataFile.Process(filename))            
                VoltcraftData += data
        except Exception as e:
            print("Error processing current file: {0}.".format(e))
            ErrorOccured = True
            break
            
    if not ErrorOccured:
        print("Saving general power information to info.txt.")
        SortedData = sorted(VoltcraftData, key=lambda x: x["Timestamp"], reverse=False)
        WriteInfoData("info.txt", VoltcraftInfo, SortedData)
        print("Saving raw power history ({0} items) to history.csv.".format(len(SortedData)))
        WriteHistoricData("history.csv", SortedData)
        print("Done.")
